{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,AAFgB,SAAS,gBAAgB,CAAC,YAElC,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,eAM3B,EAEA,EAOA,EAPA,EAAU,CAFV,EAAQ,EAAG,SAAS,gBAAgB,CAAC,cAEtB,GAAG,CAAC,SAAC,CAA1B,EAIE,OAFkB,AADE,EAAG,EAAI,KAAK,EACH,GAAG,CAAC,SAAC,CAAlC,EAA2C,OAAA,EAAK,WAAW,A,EAG7D,GAEM,EAAkB,AAAU,IAd3B,EAgBP,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EACE,IAAI,EAAS,CAAC,CAjBT,EAiBgB,CACjB,EAAS,CAAC,CAlBT,EAkBgB,OAOrB,CALI,IACF,EAAS,WAAW,EAAO,OAAO,CAAC,YAAa,KAChD,EAAS,WAAW,EAAO,OAAO,CAAC,YAAa,MAG9C,GACK,EAAS,EAET,EAAO,aAAa,CAAC,EAEhC,GAEA,EAAK,OAAO,CAAC,SAAC,CAAA,CAAK,CAAnB,EACE,EAAI,SAAS,CAAG,CAAO,CAAC,EAAS,CAC9B,GAAG,CAAC,SAAC,CADR,EACqB,MAAC,OAAe,MAAA,CAAT,EAAS,QAClC,GAAA,IAAI,CAAC,GACV,EAnCA,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar headers = document.querySelectorAll(\"thead th\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sort(index);\n    });\n});\nfunction sort(index) {\n    var rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var rowData = rows.map(function(row) {\n        var cellsArray = _to_consumable_array(row.cells);\n        var cellTexts = cellsArray.map(function(cell) {\n            return cell.textContent;\n        });\n        return cellTexts;\n    });\n    var isNumericColumn = index === 3;\n    rowData.sort(function(a, b) {\n        var aValue = a[index];\n        var bValue = b[index];\n        if (isNumericColumn) {\n            aValue = parseFloat(aValue.replace(/[^0-9.-]/g, \"\"));\n            bValue = parseFloat(bValue.replace(/[^0-9.-]/g, \"\"));\n        }\n        if (isNumericColumn) return aValue - bValue;\n        else return aValue.localeCompare(bValue);\n    });\n    rows.forEach(function(row, rowIndex) {\n        row.innerHTML = rowData[rowIndex].map(function(cellData) {\n            return \"<td>\".concat(cellData, \"</td>\");\n        }).join(\"\");\n    });\n}\n\n//# sourceMappingURL=index.7c69b7cb.js.map\n","'use strict';\n\nconst headers = document.querySelectorAll('thead th');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sort(index);\n  });\n});\n\nfunction sort(index) {\n  const rows = [...document.querySelectorAll('tbody tr')];\n\n  const rowData = rows.map((row) => {\n    const cellsArray = [...row.cells];\n    const cellTexts = cellsArray.map((cell) => cell.textContent);\n\n    return cellTexts;\n  });\n\n  const isNumericColumn = index === 3;\n\n  rowData.sort((a, b) => {\n    let aValue = a[index];\n    let bValue = b[index];\n\n    if (isNumericColumn) {\n      aValue = parseFloat(aValue.replace(/[^0-9.-]/g, ''));\n      bValue = parseFloat(bValue.replace(/[^0-9.-]/g, ''));\n    }\n\n    if (isNumericColumn) {\n      return aValue - bValue;\n    } else {\n      return aValue.localeCompare(bValue);\n    }\n  });\n\n  rows.forEach((row, rowIndex) => {\n    row.innerHTML = rowData[rowIndex]\n      .map((cellData) => `<td>${cellData}</td>`)\n      .join('');\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headers","document","querySelectorAll","forEach","header","index","addEventListener","rows","rowData","isNumericColumn","map","row","cellsArray","cells","cell","textContent","sort","a","b","aValue","bValue","parseFloat","replace","localeCompare","rowIndex","innerHTML","cellData","concat","join"],"version":3,"file":"index.7c69b7cb.js.map"}